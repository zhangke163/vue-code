var Test = {
    template: `
        <div>
           我是test组件{{text}}
           <button @click='text=text+1'>改变</button>
        </div>
    `,
    data: function () {
        return {
            text: 'hello world!'
        }
    },
    beforeCreate: function () {
        //组件创建之前
        // console.log(this.text);  //结果为undefined
        console.log('beforeCreate');
    },
    created: function () {
        //组件创建之后
        // console.log(this.text); //结果为hello world!
        console.log('created');
    },
    //使用该组件，就会触发以上的时间函数（钩子函数）
    //created中可以操作数据，实现vue->页面的影响，应用：发起ajax请求
    beforeMount: function () {
        //vue起作用，装载数据到DOM之前
        // console.log(document.body.innerHTML); 
        console.log('beforeMount');
    },
    mounted: function () {
         //beforeMount是vue启动前的DOM
        //mounted是vue启动后的DOM
        console.log('mounted');
    },
    //以上两个是VUE加载数据时候触发，只执行一次
    //应用：beforeUpdate可以获取原DOM
    //updated可以获取新DOM
    //基于数据改变影响页面
    beforeUpdate: function () {//改变前
        console.log(document.body.innerHTML);
    },
    updated: function () {//改变后
        console.log(document.body.innerHTML);
    },
    //以上两个是更改数据时才触发
    //应用：beforeUpdate可以获取原DOM
    //updated可以获取新DOM
    activated: function () {
        console.log('组件被激活了');
    },
    deactivated: function () {
        console.log('组件被停用了');
    },
    beforeDestroy: function () { //对应父组件v-if false 就销毁当前组件   //销毁之前
        console.log('beforeDestroy');
    },
    destroyed: function () { //销毁之后
        console.log('destroyed');
    }
    //以上两个销毁都是做一些其他功能的释放。比如保存一些数据到localstroge


    //总结
    //created activated 都是v-if为true ,子组件的状态
    //不同点 created没有被 <keep-alive>内置组件包裹，而activated被包裹了
    //销毁和停用同上
}
var App = {
    template: `
        <div>
            <keep-alive>
                <test v-if='isExist'></test>
            </keep-alive>
           <button @click='isExist = !isExist'>事关子组件生死</button>
        </div>
    `,
    data:function(){
        return {
            isExist:true
        }
    },
    components: {
        test: Test
    }
}